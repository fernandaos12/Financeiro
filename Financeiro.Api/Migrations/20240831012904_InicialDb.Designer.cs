// <auto-generated />
using System;
using Financeiro.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Financeiro.Api.Migrations
{
    [DbContext(typeof(ApiDbcontext))]
    [Migration("20240831012904_InicialDb")]
    partial class InicialDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Financeiro.Api.Models.Categorias", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .HasColumnType("longtext");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("tipoCategoria")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TB_CATEGORIAS");
                });

            modelBuilder.Entity("Financeiro.Api.Models.ContasPagar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Data_Emissao")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("EMISSAO");

                    b.Property<DateTime>("Data_Vencimento")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("VENCIMENTO");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("DESCRICAO");

                    b.Property<string>("Observacoes")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("OBSERVACOES");

                    b.Property<int>("PagamentoId")
                        .HasColumnType("int");

                    b.Property<int>("QdadeRepeticao")
                        .HasColumnType("int")
                        .HasColumnName("QDADE_REPETICAO");

                    b.Property<bool>("Repeticao")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("REPETICAO");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Tags")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("TAGS");

                    b.Property<double>("Valor")
                        .HasColumnType("double")
                        .HasColumnName("VALOR");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("PagamentoId");

                    b.ToTable("TB_CONTAS_PAGAR");
                });

            modelBuilder.Entity("Financeiro.Api.Models.Pagamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Conta")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .HasColumnType("longtext");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Pagamento");
                });

            modelBuilder.Entity("Financeiro.Api.Models.ContasPagar", b =>
                {
                    b.HasOne("Financeiro.Api.Models.Categorias", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Financeiro.Api.Models.Pagamento", "Pagamento")
                        .WithMany()
                        .HasForeignKey("PagamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Pagamento");
                });
#pragma warning restore 612, 618
        }
    }
}
