// <auto-generated />
using System;
using Financeiro.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Financeiro.Api.Migrations
{
    [DbContext(typeof(ApiDbcontext))]
    [Migration("20240901124019_TabelasInicial")]
    partial class TabelasInicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Financeiro.Api.Models.CartaoCredito", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("DATA_ALTERACAO");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("DESCRICAO");

                    b.Property<int>("ID")
                        .HasColumnType("int");

                    b.Property<double>("LimiteTotal")
                        .HasColumnType("double")
                        .HasColumnName("LIMITE_TOTAL");

                    b.Property<double>("LimiteUtilizado")
                        .HasColumnType("double")
                        .HasColumnName("LIMITE_UTILIZADO");

                    b.Property<int>("NomeNoCartao")
                        .HasColumnType("int")
                        .HasColumnName("NOME_NOCARTAO");

                    b.Property<int>("NumeroCartao")
                        .HasColumnType("int")
                        .HasColumnName("NUMERO_CARTAO");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("STATUS");

                    b.Property<DateTime>("Validade")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("VALIDADE");

                    b.HasKey("Id");

                    b.HasIndex("ID");

                    b.ToTable("CARTAO_CREDITO", t =>
                        {
                            t.Property("ID")
                                .HasColumnName("ID1");
                        });
                });

            modelBuilder.Entity("Financeiro.Api.Models.Categorias", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("DATA_ALTERACAO");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(600)
                        .HasColumnType("varchar(600)")
                        .HasColumnName("DESCRICAO");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("STATUS");

                    b.Property<int>("tipoCategoria")
                        .HasColumnType("int")
                        .HasColumnName("TIPOCATEGORIA");

                    b.HasKey("Id");

                    b.ToTable("TB_CATEGORIAS");
                });

            modelBuilder.Entity("Financeiro.Api.Models.Cobranca_Negociacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int>("CategoriaDivida")
                        .HasColumnType("int")
                        .HasColumnName("CATEGORIA");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("DATA_ALTERACAO");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("DESCRICAO");

                    b.Property<int?>("ID")
                        .HasColumnType("int");

                    b.Property<bool?>("Parcelado")
                        .IsRequired()
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("PARCELADO");

                    b.Property<int?>("QdadeParcelas")
                        .HasColumnType("int")
                        .HasColumnName("QDADE_PARCELAS");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("STATUS");

                    b.Property<double?>("Valor")
                        .IsRequired()
                        .HasColumnType("double")
                        .HasColumnName("VALOR");

                    b.Property<DateTime?>("Vencimento")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("VENCIMENTO");

                    b.HasKey("Id");

                    b.HasIndex("ID");

                    b.ToTable("TB_NEGOCIACAO", t =>
                        {
                            t.Property("ID")
                                .HasColumnName("ID1");
                        });
                });

            modelBuilder.Entity("Financeiro.Api.Models.Cobrancas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int>("CategoriaDivida")
                        .HasColumnType("int")
                        .HasColumnName("CATEGORIA");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("DATA_ALTERACAO");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("DESCRICAO");

                    b.Property<int?>("ID")
                        .HasColumnType("int");

                    b.Property<bool>("NegociaDivida")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("NEGOCIA_DIVIDA");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("STATUS");

                    b.Property<double?>("Valor")
                        .IsRequired()
                        .HasColumnType("double")
                        .HasColumnName("VALOR");

                    b.Property<DateTime?>("Vencimento")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("VENCIMENTO");

                    b.HasKey("Id");

                    b.HasIndex("ID");

                    b.ToTable("TB_COBRANCA", t =>
                        {
                            t.Property("ID")
                                .HasColumnName("ID1");
                        });
                });

            modelBuilder.Entity("Financeiro.Api.Models.Configuracoes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("DATA_ALTERACAO");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("EMAIL");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("NOME");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("STATUS");

                    b.Property<int>("telefone")
                        .HasColumnType("int")
                        .HasColumnName("TELEFONE");

                    b.HasKey("Id");

                    b.ToTable("TB_CONFIGURACOES");
                });

            modelBuilder.Entity("Financeiro.Api.Models.ContaBancaria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int>("Agencia")
                        .HasColumnType("int")
                        .HasColumnName("AGENCIA");

                    b.Property<int>("Conta")
                        .HasColumnType("int")
                        .HasColumnName("CONTA");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("DATA_ALTERACAO");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("DESCRICAO");

                    b.Property<int>("Digito")
                        .HasColumnType("int")
                        .HasColumnName("DIGITO");

                    b.Property<int?>("ID")
                        .HasColumnType("int");

                    b.Property<string>("Observacoes")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("OBSERVACOES");

                    b.Property<double>("SaldoTotal")
                        .HasColumnType("double")
                        .HasColumnName("SALDO");

                    b.Property<double>("SaldoUtilizado")
                        .HasColumnType("double")
                        .HasColumnName("SALDO_UTILIZADO");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("STATUS");

                    b.HasKey("Id");

                    b.HasIndex("ID");

                    b.ToTable("TB_CONTA_BANCARIA", t =>
                        {
                            t.Property("ID")
                                .HasColumnName("ID1");
                        });
                });

            modelBuilder.Entity("Financeiro.Api.Models.ContasPagar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("DATA_ALTERACAO");

                    b.Property<DateTime>("Data_Emissao")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("EMISSAO");

                    b.Property<DateTime>("Data_Vencimento")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("VENCIMENTO");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("DESCRICAO");

                    b.Property<int?>("ID")
                        .HasColumnType("int");

                    b.Property<string>("Observacoes")
                        .HasColumnType("longtext")
                        .HasColumnName("OBSERVACOES");

                    b.Property<int>("QdadeRepeticao")
                        .HasColumnType("int")
                        .HasColumnName("QDADE_REPETICAO");

                    b.Property<bool>("Repeticao")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("REPETICAO");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("STATUS");

                    b.Property<double>("Valor")
                        .HasColumnType("double")
                        .HasColumnName("VALOR");

                    b.HasKey("Id");

                    b.HasIndex("ID");

                    b.ToTable("TB_CONTAS_PAGAR", t =>
                        {
                            t.Property("ID")
                                .HasColumnName("ID1");
                        });
                });

            modelBuilder.Entity("Financeiro.Api.Models.ContasReceber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int?>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<bool>("Conciliado")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("CONCILIADO");

                    b.Property<bool>("Confirmado")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("CONFIRMADO");

                    b.Property<int?>("Conta")
                        .HasColumnType("int")
                        .HasColumnName("CONTA");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("DATA_ALTERACAO");

                    b.Property<DateTime>("DataVencimento")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("VENCIMENTO");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("DESCRICAO");

                    b.Property<string>("Observacoes")
                        .HasColumnType("longtext")
                        .HasColumnName("OBSERVACOES");

                    b.Property<int>("QdadeRepeticoes")
                        .HasColumnType("int")
                        .HasColumnName("QDADE_REPETICOES");

                    b.Property<bool>("Repeticao")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("REPETICAO");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("STATUS");

                    b.Property<double>("Valor")
                        .HasColumnType("double")
                        .HasColumnName("VALOR");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.ToTable("TB_CONTAS_RECEBER");
                });

            modelBuilder.Entity("Financeiro.Api.Models.Pagamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("DATA_ALTERACAO");

                    b.Property<DateTime>("DataFechamento")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("DATA_FECHAMENTO");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("DESCRICAO");

                    b.Property<int>("FormaPagamento")
                        .HasColumnType("int")
                        .HasColumnName("FORMA_PAGAMENTO");

                    b.Property<int>("MesCompetencia")
                        .HasColumnType("int")
                        .HasColumnName("MES_COMPETENCIA");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("STATUS");

                    b.HasKey("Id");

                    b.ToTable("TB_PAGAMENTO");
                });

            modelBuilder.Entity("Financeiro.Api.Models.Receitas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("DATA_ALTERACAO");

                    b.Property<DateTime>("DataRecebimento")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("VALIDADE");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("DESCRICAO");

                    b.Property<int?>("ID")
                        .HasColumnType("int");

                    b.Property<int>("MesCompetencia")
                        .HasColumnType("int")
                        .HasColumnName("MES_COMPETENCIA");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("STATUS");

                    b.Property<int>("TipoConta")
                        .HasColumnType("int")
                        .HasColumnName("TIPO_CONTA");

                    b.Property<int>("TipoReceita")
                        .HasColumnType("int")
                        .HasColumnName("TIPO_RECEITA");

                    b.HasKey("Id");

                    b.HasIndex("ID");

                    b.ToTable("TB_RECEITAS", t =>
                        {
                            t.Property("ID")
                                .HasColumnName("ID1");
                        });
                });

            modelBuilder.Entity("Financeiro.Api.Models.Tags", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("DATA_ALTERACAO");

                    b.Property<string>("Descricao")
                        .HasColumnType("longtext")
                        .HasColumnName("DESCRICAO");

                    b.Property<int?>("ID")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("STATUS");

                    b.HasKey("Id");

                    b.HasIndex("ID");

                    b.ToTable("TB_TAGS", t =>
                        {
                            t.Property("ID")
                                .HasColumnName("ID1");
                        });
                });

            modelBuilder.Entity("Financeiro.Api.Models.CartaoCredito", b =>
                {
                    b.HasOne("Financeiro.Api.Models.Configuracoes", null)
                        .WithMany("CartaoCredito")
                        .HasForeignKey("ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Financeiro.Api.Models.ContaBancaria", "Banco")
                        .WithMany()
                        .HasForeignKey("ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Banco");
                });

            modelBuilder.Entity("Financeiro.Api.Models.Cobranca_Negociacao", b =>
                {
                    b.HasOne("Financeiro.Api.Models.Pagamento", "Pagamento")
                        .WithMany()
                        .HasForeignKey("ID");

                    b.Navigation("Pagamento");
                });

            modelBuilder.Entity("Financeiro.Api.Models.Cobrancas", b =>
                {
                    b.HasOne("Financeiro.Api.Models.Cobranca_Negociacao", "NegociacaoDivida")
                        .WithMany()
                        .HasForeignKey("ID");

                    b.HasOne("Financeiro.Api.Models.Pagamento", "Pagamento")
                        .WithMany()
                        .HasForeignKey("ID");

                    b.Navigation("NegociacaoDivida");

                    b.Navigation("Pagamento");
                });

            modelBuilder.Entity("Financeiro.Api.Models.ContaBancaria", b =>
                {
                    b.HasOne("Financeiro.Api.Models.Configuracoes", null)
                        .WithMany("ContasBancarias")
                        .HasForeignKey("ID");
                });

            modelBuilder.Entity("Financeiro.Api.Models.ContasPagar", b =>
                {
                    b.HasOne("Financeiro.Api.Models.Categorias", "Categoria")
                        .WithMany()
                        .HasForeignKey("ID");

                    b.HasOne("Financeiro.Api.Models.Pagamento", "Pagamento")
                        .WithMany()
                        .HasForeignKey("ID");

                    b.Navigation("Categoria");

                    b.Navigation("Pagamento");
                });

            modelBuilder.Entity("Financeiro.Api.Models.ContasReceber", b =>
                {
                    b.HasOne("Financeiro.Api.Models.Categorias", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId");

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("Financeiro.Api.Models.Receitas", b =>
                {
                    b.HasOne("Financeiro.Api.Models.Configuracoes", null)
                        .WithMany("Receitas")
                        .HasForeignKey("ID");
                });

            modelBuilder.Entity("Financeiro.Api.Models.Tags", b =>
                {
                    b.HasOne("Financeiro.Api.Models.ContasPagar", null)
                        .WithMany("Tags")
                        .HasForeignKey("ID");

                    b.HasOne("Financeiro.Api.Models.ContasReceber", null)
                        .WithMany("Tags")
                        .HasForeignKey("ID");
                });

            modelBuilder.Entity("Financeiro.Api.Models.Configuracoes", b =>
                {
                    b.Navigation("CartaoCredito");

                    b.Navigation("ContasBancarias");

                    b.Navigation("Receitas");
                });

            modelBuilder.Entity("Financeiro.Api.Models.ContasPagar", b =>
                {
                    b.Navigation("Tags");
                });

            modelBuilder.Entity("Financeiro.Api.Models.ContasReceber", b =>
                {
                    b.Navigation("Tags");
                });
#pragma warning restore 612, 618
        }
    }
}
